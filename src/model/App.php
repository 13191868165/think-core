<?php
namespace core\model;

use app\core\util\Jwt;

class App extends Model
{
    //表名
    public $table = '';
    //主键
    public $pk = 'id';

    //软删除字段
    public $deleteTime = '';

    public function install()
    {
        return "CREATE TABLE IF NOT EXISTS `" . table($this->table) . "` (
            `{$this->pk}` int(10) NOT NULL AUTO_INCREMENT COMMENT '应用id',
            `title` varchar(150) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '名称',
            `appid` char(20) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '应用id',
            `secret` char(40) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '' COMMENT '应用签名盐',
            `desc` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT '' COMMENT '备注',
            `admin` tinyint(1) DEFAULT 0 COMMENT '是否允许访问admin，0:不允许 1:允许',
            `api` tinyint(1) DEFAULT 0 COMMENT '是否允许访问api，0:不允许 1:允许',
            `register_time` int(10) unsigned NOT NULL DEFAULT 0 COMMENT '注册时间',
            `is_enabled` tinyint(1) DEFAULT 0 COMMENT '状态 0:禁用 1:启用',
            `create_time` int(10) unsigned NOT NULL DEFAULT 0 COMMENT '创建时间',
            PRIMARY KEY (`{$this->pk}`),
            UNIQUE KEY `appid` (`appid`)
        )   ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT = 'app应用表';";
    }

    /**
     * 创建应用id
     * @return string
     */
    public function createAppid()
    {
        $s = str_split(random(8));
        $d = str_split(str_shuffle(date('mdh')));
        $num = str_split(rand(222222, 888888));

        for($i = 0; $i < count($num); $i++) {
            array_splice($s, $num[$i], 0, $d[$i]);
        }

        return strtolower(date('y') . implode('', $s));
    }

    /**
     * 创建应用签名盐
     * @param string $str
     * @return string
     */
    public function createSecret($str = '')
    {
        if(empty($str)) {
            $str = microtime() . '_' . random(10);
        }
        return md5($str);
    }

    public function beforeSave($data, $where)
    {
        $time = time();

        $fieldType = [];
        if(empty($where)) { //添加

            if(empty($data['appid'])) {
                $data['appid'] = $this->createAppid($data['title']);
                while(!empty($this->getRow(['appid' => $data['appid']]))) {
                    $data['appid'] = $this->createAppid();
                }
            }

            if(empty($data['secret'])) {
                $data['secret'] = $this->createSecret();
            }

            $fieldType['admin'] = 'intval';
            $fieldType['api'] = 'intval';
            $fieldType['create_time'] = ['isset', $time];
        }else { //更新

            //appid 不允许修改
            if(!empty($data['appid'])) {
                unset($data['appid']);
            }

            if(!empty($data['register_time'])) {
                $fieldType['register_time'] = ['isset', $time];
            }
        }
        if(!empty($data['password'])) {
            $data['salt'] = random(8);
            $fieldType['password'] = ['hash', $data['password'], $data['salt']];
        }
        $data = $this->typeConversion($data, $fieldType);

        return parent::beforeSave($data, $where); // TODO: Change the autogenerated stub
    }

    public function afterGetInfo($result)
    {
        $fieldType = [
            'login_time' => ['datetime', 'Y-m-d H:i:s', ''],
            'create_time' => ['datetime', 'Y-m-d H:i:s', ''],
        ];

        $result = $this->typeConversion($result, $fieldType);

        return $result;
    }

}
